@page "/LIKE"














@foreach (var usuario in Usuarios)
{



		<section class="seccion-perfil-usuario">


		<div class="la314 p-3">
					@if (usuario.Genero == "M")
					{
										<img  src="/Imagenes/M.jpg" alt="Foto de perfil" class="profile-image" />
					}
					else
					{
										<img src="/Imagenes/F.jpg" alt="Foto de perfil" class="profile-image" />

					}

			<br>

						<ul class="lista-datos">
				<h4 class="titulo"> @usuario.Nombre @usuario.Apellido</h4>

				<li><i class="oi oi-person"></i> Edad: @usuario.Edad años</li>
				<br>
						<li><i class="oi oi-person"></i> Genero: @usuario.Genero</li>
						<br>
							<li><i class="oi oi-location"></i> Ubicacion: @usuario.Ubicacion</li>
				<br>
							<li><i class="oi oi-book"></i> Intereses: @usuario.Intereses</li>
						</ul>
						<button class="btn btn-warning oi oi-heart" ></button>
			<button class="btn btn-warning oi oi-share"></button>
		
			<NavLink href="CHAT" class="btn btn-primary oi oi-chat "></NavLink>



					</div>
						<br>
		</section>


	}


	





@code {


	public string TituloForm => request.IdUsuario == 0 ?
		"Agregar Usuario" : "Modificar Usuario";

	public bool ShowForm { get; set; } = false;


	public string Filtro { get; set; } = "";

	public List<UsuarioResponse> Usuarios { get; set; } = new List<UsuarioResponse>();



	public UsuarioRequest request { get; set; } = new UsuarioRequest();



	void Cancelar()
	{
		request  = new UsuarioRequest();
		ShowForm = false;
	}




	async Task CargarUsuarios()
	{
		var resultado = await UsuarioServices.Consultar(Filtro);

		if (resultado.Success)
		{
			Usuarios = resultado.Data!;

		}

	}

	protected override async Task OnInitializedAsync()
	{
		await CargarUsuarios();
	}




	public async Task Send()
	{
		if (request.IdUsuario == 0)
		{
			//Debo registrar el contacto..
			var r = await UsuarioServices.Crear(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
		else
		{
			//Debo solicitar modificar el contacto...
			var r = await UsuarioServices.Modificar(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
	}





	public void Seleccionar(int IdUsuario)
	{
		ShowForm = true;
		request = Usuarios
		.Where(c => c.IdUsuario == IdUsuario)
		.Select(c => c.ToRequest())
		.FirstOrDefault()??new UsuarioRequest();
	}



	public async Task Eliminar(UsuarioResponse contacto)
	{
		var resultado = await UsuarioServices.Eliminar(contacto.ToRequest());
		if (resultado.Success)
		{
			await CargarUsuarios();
			StateHasChanged();
		}
	}
}
