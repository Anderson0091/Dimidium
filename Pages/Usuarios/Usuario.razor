@page "/Usuario"

<h3>Usuarios</h3>

@if (!ShowForm)
{
		<h3>Usuarios (@Usuarios.Count)</h3>
		<div class="mb-2">
			<button class="btn btn-success"
            @onclick="()=>{ShowForm = !ShowForm;}">
				Agregar
			</button>
		</div>

}
else{
	
	<div class="container">
@if (ShowForm)
{
<h3>@TituloForm</h3>
<EditForm Model="request" OnValidSubmit="Send">

			  <div class="mb-3 input-group"> 
					<label class="input-group-text">Nombre</label>
					<InputText class="form-control" @bind-Value="@request.Nombre"></InputText>
				</div>
					 <div class="mb-3 input-group">
					<label class="input-group-text">Apellido</label>
					<InputText class="form-control" @bind-Value="@request.Apellido"></InputText>
				</div>

				<div class="mb-3 input-group">
					<label class="input-group-text">Contraseña</label>
					<InputText class="form-control" @bind-Value="@request.Contraseña"></InputText>
				</div>
				<div class="mb-3 input-group">
					<label class="input-group-text">Telefono</label>
					<InputText class="form-control" @bind-Value="@request.Telefono"></InputText>
				</div>

				<div class="mb-3 input-group">
					<label class="input-group-text">Edad</label>
					<InputNumber class="form-control" @bind-Value="@request.Edad"></InputNumber>
				</div>
				<div class="mb-3 input-group">
					<label class="input-group-text">Email</label>
					<InputText class="form-control" @bind-Value="@request.Email"></InputText>
				</div>


				<div class="mb-3 input-group">
					<label class="input-group-text">Genero</label>
					<InputText class="form-control" @bind-Value="@request.Genero"></InputText>
				</div>
				<div class="mb-3 input-group">
					<label class="input-group-text">Ubicacion</label>
					<InputText class="form-control" @bind-Value="@request.Ubicacion"></InputText>
				</div>

				<div class="mb-3 input-group">
					<label class="input-group-text">Foto</label>
					<InputText class="form-control" @bind-Value="@request.FotoPerfil"></InputText>
				</div>
				<div class="mb-3 input-group">
					<label class="input-group-text">Intereses</label>
					<InputText class="form-control" @bind-Value="@request.Intereses"></InputText>
				</div>


				<div class="btn-group">
					<button type="submit" class="btn btn-outline-success">Guardar</button>
					<button @onclick="Cancelar" class="btn btn-outline-danger">Cancelar</button>
				</div>
				</EditForm>
				}

				    else
					 {
       
				<div Class="container">
				@foreach (var usuario in Usuarios)
				{
						<div class="card" style="width:18rem;">
							<div class="card-body">
									<label class="card-title">@usuario.Nombre</label>
							<div class="card-text">
									<label>@usuario.Nombre</label>
									<label>@usuario.Apellido</label>
									<label>@usuario.Edad</label>
									<label>@usuario.Telefono</label>
								<label>@usuario.Email</label>
								<label>@usuario.Genero</label>
								<label>@usuario.Ubicacion</label>
								<label>@usuario.Intereses</label>
							</div>
								<button @onclick="()=>Seleccionar(usuario.IdUsuario)" class="btn btn-warning">Editar</button>
								<button @onclick="()=>Eliminar(usuario)"class="btn btn-danger">Eliminar</button>
							</div>
						</div>
				}

			</div>
        }
    
</div>

}
@code{

	public string TituloForm => request.IdUsuario == 0 ?
		"Agregar Usuario" : "Modificar Usuario";

	public bool ShowForm { get; set; } = false;


	public string Filtro { get; set; } = "";

	public List<UsuarioResponse> Usuarios { get; set; } = new List<UsuarioResponse>();



	public UsuarioRequest request { get; set; } = new UsuarioRequest();



	void Cancelar()
	{
		request  = new UsuarioRequest();
		ShowForm = false;
	}




	async Task CargarUsuarios()
	{
		var resultado = await UsuarioServices.Consultar(Filtro);

		if (resultado.Success)
		{
			Usuarios = resultado.Data!;

		}

	}

	protected override async Task OnInitializedAsync()
	{
			await CargarUsuarios();
	}




	public async Task Send()
	{
		if (request.IdUsuario == 0)
		{
			//Debo registrar el contacto..
			var r = await UsuarioServices.Crear(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
		else
		{
			//Debo solicitar modificar el contacto...
			var r = await UsuarioServices.Modificar(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
	}



	public void Seleccionar(int Id)
	{
		ShowForm = true;
		request = Usuarios
		.Where(c => c.IdUsuario == Id)
		.Select(c => c.ToRequest())
		.FirstOrDefault()??new UsuarioRequest();
	}



	public async Task Eliminar(UsuarioResponse contacto)
	{
		var resultado = await UsuarioServices.Eliminar(contacto.ToRequest());
		if (resultado.Success)
		{
			await CargarUsuarios();
			StateHasChanged();
		}
	}


}
