@page "/Regi"

<!--Register-->

<div class="la314">
	<h2>Usuarios (@Usuarios.Count)</h2>

	
		@foreach (var usuario in Usuarios)
		{


		
				<label class="card-title">ID: @usuario.IdUsuario</label>
				<img src="@usuario.FotoPerfil" alt="Foto de perfil" class="profile-image" />
				<br>
				<label>Nombre: @usuario.Nombre</label>
				<label>@usuario.Apellido</label>
				<br>
				<label>Edad: @usuario.Edad</label>
				<br>
				<label>Sexo: @usuario.Genero</label>
				<br>
				<label>Tel: @usuario.Telefono</label>
				<br>
				<label> Ubicacion: @usuario.Ubicacion</label>
				<br>
				<label>Intereses: @usuario.Intereses</label>


				<br>
				<button @onclick="()=>Seleccionar(usuario.IdUsuario)" class="btn btn-warning">Editar</button>
				<button @onclick="()=>Eliminar(usuario)" class="btn btn-danger">Eliminar</button>

	




		}



</div>












@code {


	public string TituloForm => request.IdUsuario == 0 ?
			"Agregar Usuario" : "Modificar Usuario";

	public bool ShowForm { get; set; } = false;


	public string Filtro { get; set; } = "";

	public List<UsuarioResponse> Usuarios { get; set; } = new List<UsuarioResponse>();



	public UsuarioRequest request { get; set; } = new UsuarioRequest();



	void Cancelar()
	{
		request  = new UsuarioRequest();
		ShowForm = false;
	}




	async Task CargarUsuarios()
	{
		var resultado = await UsuarioServices.Consultar(Filtro);

		if (resultado.Success)
		{
			Usuarios = resultado.Data!;

		}

	}

	protected override async Task OnInitializedAsync()
	{
		await CargarUsuarios();
	}




	public async Task Send()
	{
		if (request.IdUsuario == 0)
		{
			//Debo registrar el contacto..
			var r = await UsuarioServices.Crear(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
		else
		{
			//Debo solicitar modificar el contacto...
			var r = await UsuarioServices.Modificar(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
	}



	public void Seleccionar(int IdUsuario)
	{
		ShowForm = true;
		request = Usuarios
		.Where(c => c.IdUsuario == IdUsuario)
		.Select(c => c.ToRequest())
		.FirstOrDefault()??new UsuarioRequest();
	}



	public async Task Eliminar(UsuarioResponse contacto)
	{
		var resultado = await UsuarioServices.Eliminar(contacto.ToRequest());
		if (resultado.Success)
		{
			await CargarUsuarios();
			StateHasChanged();
		}
	}



}
