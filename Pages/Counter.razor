@page "/counter"
@using Dimidiun.Data.Request;
@using Dimidiun.Data.Response;
<PageTitle>Pagina #1</PageTitle>









 <section class="seccion-perfil-usuario">
        <div class="perfil-usuario-header">
            <div class="perfil-usuario-portada">
                <div class="perfil-usuario-avatar">
				
							<img src="/Imagenes/M.jpg" alt="Foto de perfil" class="profile-image" />
					
				
					<input type="file" id="archivo-input" style="display: none;">
					<button type="button" class="boton-avatar" onclick="document.getElementById('archivo-input').click();">
						<i class="oi oi-image"></i>
					</button>

					<div id="contenedor-imagen"></div>
					
                </div>
                <button type="button" class="boton-portada">
                    <i class="oi oi-image"></i> Cambiar fondo
					
                </button>
				<button type="button" class="boton-editar">
					<i class="oi oi-pencil"></i> Editar Perfil
				</button>
            </div>
        </div>
        <div class="perfil-usuario-body">
            <div class="perfil-usuario-bio">
                <h3 class="titulo"> Mario Hugo</h3>
            </div>
	</div>
            <div class="perfil-usuario-footer">
		<ul class="lista-datos">
<li><i class="oi oi-person"></i> Edad: 25 años</li>
				<li><i class="oi oi-person"></i> Genero: M</li>
					<li><i class="oi oi-location"></i> Ubicacion: San Juan,RD</li>
                    <li><i class="oi oi-book"></i> Intereses: Jugar videojuegos</li>
                </ul>
            </div>
    </section>













   


@code{


	public string TituloForm => request.IdUsuario == 0 ?
		"Agregar Usuario" : "Modificar Usuario";

	public bool ShowForm { get; set; } = false;


	public string Filtro { get; set; } = "";

	public List<UsuarioResponse> Usuarios { get; set; } = new List<UsuarioResponse>();



	public UsuarioRequest request { get; set; } = new UsuarioRequest();



	void Cancelar()
	{
		request  = new UsuarioRequest();
		ShowForm = false;
	}




	async Task CargarUsuarios()
	{
		var resultado = await UsuarioServices.Consultar(Filtro);

		if (resultado.Success)
		{
			Usuarios = resultado.Data!;

		}

	}

	protected override async Task OnInitializedAsync()
	{
		await CargarUsuarios();
	}




	public async Task Send()
	{
		if (request.IdUsuario == 0)
		{
			//Debo registrar el contacto..
			var r = await UsuarioServices.Crear(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
		else
		{
			//Debo solicitar modificar el contacto...
			var r = await UsuarioServices.Modificar(request);
			if (r.Success)
			{
				Cancelar();
				await CargarUsuarios();
				StateHasChanged();
			}
		}
	}





	public void Seleccionar(int IdUsuario)
	{
		ShowForm = true;
		request = Usuarios
		.Where(c => c.IdUsuario == IdUsuario)
		.Select(c => c.ToRequest())
		.FirstOrDefault()??new UsuarioRequest();
	}



	public async Task Eliminar(UsuarioResponse contacto)
	{
		var resultado = await UsuarioServices.Eliminar(contacto.ToRequest());
		if (resultado.Success)
		{
			await CargarUsuarios();
			StateHasChanged();
		}
	}


                    }